#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

def product = "pre"

def component = "shared-infrastructure"

static String lockRg(String envName){
  def lockScript = "environment='" +  envName + "';" +
        'rgName="pre-sbox";' +
        'lockName="${environment}-lock";' +
        '' +
        'az login --identity;' +
        'az account set -s "DTS-SHAREDSERVICES-${environment}";' +
        '' +
        'az group lock create --lock-type CanNotDelete --name ${lockname}   --resource-group ${rgName}'
        
    return lockScript;
}

static String unlockRg(String envName){
  def unlockScript = "environment='" +  envName + "';" +
        'rgName="pip-ss-${environment}-rg";' +
        'lockName="${environment}-lock";' +
        '' +
        'az login --identity;' +
        'az account set -s "DTS-SHAREDSERVICES-${environment}";' +
        '' +
        'echo "Get ${lockName} lock from ${rgName}";' +
        'lock=$(az lock list --resource-group ${rgName} --query "[? contains(name, \'${lockName}\')].{name:name}" -o tsv);' +
        '' +
        '$($lock != "" && echo "Delete Lock ${lockName} on ${rgName}"; az lock delete --name ${lockName} --resource-group ${rgName} || echo "${lockName} on ${rgName} not found")'

    return unlockScript;
}

def branchesToSync = ['demo']

withInfraPipeline(product) {
  enableSlackNotifications('#pre-builds')
  // syncBranchesWithMaster(branchesToSync)
  //   onMaster() {
  //     env.ENV = 'stg'
  //   }
  //   onPR() {
  //     env.ENV = 'dev'
  //   }
  //   onDemo {
  //     env.ENV = 'demo'
  //   }


  // before('buildinfra:demo') {
  //   sh "echo 'Enable Encrypt'"  
  //   sh encrypthost("demo")
  // }
  
  // after('buildinfra:demo') {
  //   sh "echo 'Enable AMS ID'"
  //   sh addamsid("demo")
  // }

  // before('buildinfra:stg') {
  //   sh "echo 'Enable Encrypt'"  
  //   sh encrypthost("STG")
  // }
  
  // after('buildinfra:stg') {
  //   sh "echo 'Enable AMS ID'"
  //   sh addamsid("STG")
  // }

  // before('buildinfra:test') {
  //   sh "echo 'Enable VM disk Encrypt'"  
  //   sh encrypthost("TEST")
  // }
  
  // after('buildinfra:test') {
  //   sh "echo 'Enable AMS ID'"
  //   sh addamsid("TEST")
  // }




  before('buildinfra:stg') {
    sh "echo 'unlock RG stg'"
    sh unlockRg("stg")
  }

  // before('buildinfra:prod') {
  //   sh "echo 'Enable Encrypt'"  
  //   sh encrypthost("PROD")
  // }
  
  // after('buildinfra:prod') {
  //   sh "echo 'Enable AMS ID'"
  //   sh addamsid("PROD")
  // }
  
  // before('buildinfra:stg') {
  //   sh "echo 'unlock RG stg'"
  //   sh unlockRg("stg")
  // }

    
}