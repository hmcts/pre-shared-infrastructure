#!groovy
//noinspection GroovyUnusedAssignment
@Library("Infrastructure") _

def product = "pre"
def component = "shared-infrastructure"
def branchesToSync = ['demo']

static String unlockRg(String envName){
  def unlockScript = "environment='" +  envName + "';" +
        'rgName="pre-${environment}";' +
        'lockName="${environment}-lock";' +
        '' +
        'az login --identity;' +
        'az account set -s "DTS-SHAREDSERVICES-${environment}";' +
        '' +
        'echo "Get ${lockName} lock from ${rgName}";' +
        'lock=$(az lock list --resource-group ${rgName} --query "[? contains(name, \'${lockName}\')].{name:name}" -o tsv);' +
        '' +
        '$($lock != "" && echo "Delete Lock ${lockName} on ${rgName}"; az lock delete --name ${lockName} --resource-group ${rgName} || echo "${lockName} on ${rgName} not found")'

    return unlockScript;
}

withInfraPipeline(product, component) {
  enableSlackNotifications('#pre-builds')
  syncBranchesWithMaster(branchesToSync)

  before('buildinfra:dev') {
    sh "echo 'unlock RG dev'"
    sh unlockRg("dev")
  }
    
}
